//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCSCalc.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SCSCalc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 100.
        /// </summary>
        internal static string AnArbitraryNumberOfPorts_NumberOfPortsDiapason_Max {
            get {
                return ResourceManager.GetString("AnArbitraryNumberOfPorts.NumberOfPortsDiapason.Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1.
        /// </summary>
        internal static string AnArbitraryNumberOfPorts_NumberOfPortsDiapason_Min {
            get {
                return ResourceManager.GetString("AnArbitraryNumberOfPorts.NumberOfPortsDiapason.Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string NonRecommendations_RecommendationCableStandart {
            get {
                return ResourceManager.GetString("NonRecommendations.RecommendationCableStandart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string NonRecommendations_RecommendationIsolationMaterial {
            get {
                return ResourceManager.GetString("NonRecommendations.RecommendationIsolationMaterial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string NonRecommendations_RecommendationIsolationType {
            get {
                return ResourceManager.GetString("NonRecommendations.RecommendationIsolationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string NonRecommendations_RecommendationShieldedType {
            get {
                return ResourceManager.GetString("NonRecommendations.RecommendationShieldedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1000.
        /// </summary>
        internal static string NonStrictСomplianceWithTheStandart_MaxPermanentLinkDiapason_Max {
            get {
                return ResourceManager.GetString("NonStrictСomplianceWithTheStandart.MaxPermanentLinkDiapason.Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 0,01.
        /// </summary>
        internal static string NonStrictСomplianceWithTheStandart_MaxPermanentLinkDiapason_Min {
            get {
                return ResourceManager.GetString("NonStrictСomplianceWithTheStandart.MaxPermanentLinkDiapason.Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1000.
        /// </summary>
        internal static string NonStrictСomplianceWithTheStandart_MinPermanentLinkDiapason_Max {
            get {
                return ResourceManager.GetString("NonStrictСomplianceWithTheStandart.MinPermanentLinkDiapason.Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 0,01.
        /// </summary>
        internal static string NonStrictСomplianceWithTheStandart_MinPermanentLinkDiapason_Min {
            get {
                return ResourceManager.GetString("NonStrictСomplianceWithTheStandart.MinPermanentLinkDiapason.Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1.
        /// </summary>
        internal static string NonTechnologicalReserve_TechnologicalReserve {
            get {
                return ResourceManager.GetString("NonTechnologicalReserve.TechnologicalReserve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 100.
        /// </summary>
        internal static string NotAnArbitraryNumberOfPorts_NumberOfPortsDiapason_Max {
            get {
                return ResourceManager.GetString("NotAnArbitraryNumberOfPorts.NumberOfPortsDiapason.Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 2.
        /// </summary>
        internal static string NotAnArbitraryNumberOfPorts_NumberOfPortsDiapason_Min {
            get {
                return ResourceManager.GetString("NotAnArbitraryNumberOfPorts.NumberOfPortsDiapason.Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 5 (Cat 5), 5e (Cat 5e).
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationCableStandart_FastEthernet {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationCableStandart.FastEthernet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 6 (Cat 6).
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationCableStandart_FiveGBASE_T {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationCableStandart.FiveGBASE_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 5e (Cat 5e).
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationCableStandart_GigabitBASE_T {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationCableStandart.GigabitBASE_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 6 (Cat 6).
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationCableStandart_GigabitBASE_TX {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationCableStandart.GigabitBASE_TX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationCableStandart_None {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationCableStandart.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 3 (Cat 3), 5 (Cat 5), 5e (Cat 5e).
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationCableStandart_TenBASE_T {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationCableStandart.TenBASE_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 6 (Cat 6), 7 (Cat 7) ,7a (Cat 7a).
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationCableStandart_TenGE {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationCableStandart.TenGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 5e (Cat 5e).
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationCableStandart_TwoPointFiveGBASE_T {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationCableStandart.TwoPointFiveGBASE_T", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на LSZH, LSOH, LSHF, LSNH, NHFR, HFFR, FRZH, LSFRZH.
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationIsolationMaterial_LSZH {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationIsolationMaterial.LSZH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationIsolationMaterial_None {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationIsolationMaterial.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PVC, PP, PE.
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationIsolationMaterial_PVC {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationIsolationMaterial.PVC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Indoor.
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationIsolationType_Indoor {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationIsolationType.Indoor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationIsolationType_None {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationIsolationType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Outdoor.
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationIsolationType_Outdoor {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationIsolationType.Outdoor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FTP, STP, F/UTP, S/UTP, U/FTP, SF/UTP, F/FTP, S/FTP, SF/FTP.
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationShieldedType_FTP {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationShieldedType.FTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationShieldedType_None {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationShieldedType.None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UTP (U/UTP).
        /// </summary>
        internal static string RecommendationsAvailability_RecommendationShieldedType_UTP {
            get {
                return ResourceManager.GetString("RecommendationsAvailability.RecommendationShieldedType.UTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 10000.
        /// </summary>
        internal static string StandartValues_CableHankMeterageDiapason_Max {
            get {
                return ResourceManager.GetString("StandartValues.CableHankMeterageDiapason.Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 0,01.
        /// </summary>
        internal static string StandartValues_CableHankMeterageDiapason_Min {
            get {
                return ResourceManager.GetString("StandartValues.CableHankMeterageDiapason.Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 10000.
        /// </summary>
        internal static string StandartValues_NumberOfWorkplacesDiapason_Max {
            get {
                return ResourceManager.GetString("StandartValues.NumberOfWorkplacesDiapason.Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1.
        /// </summary>
        internal static string StandartValues_NumberOfWorkplacesDiapason_Min {
            get {
                return ResourceManager.GetString("StandartValues.NumberOfWorkplacesDiapason.Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 2.
        /// </summary>
        internal static string StandartValues_TechnologicalReserveDiapason_Max {
            get {
                return ResourceManager.GetString("StandartValues.TechnologicalReserveDiapason.Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1.
        /// </summary>
        internal static string StandartValues_TechnologicalReserveDiapason_Min {
            get {
                return ResourceManager.GetString("StandartValues.TechnologicalReserveDiapason.Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 90.
        /// </summary>
        internal static string StrictСomplianceWithTheStandart_MaxPermanentLinkDiapason_Max {
            get {
                return ResourceManager.GetString("StrictСomplianceWithTheStandart.MaxPermanentLinkDiapason.Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1.
        /// </summary>
        internal static string StrictСomplianceWithTheStandart_MaxPermanentLinkDiapason_Min {
            get {
                return ResourceManager.GetString("StrictСomplianceWithTheStandart.MaxPermanentLinkDiapason.Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 90.
        /// </summary>
        internal static string StrictСomplianceWithTheStandart_MinPermanentLinkDiapason_Max {
            get {
                return ResourceManager.GetString("StrictСomplianceWithTheStandart.MinPermanentLinkDiapason.Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1.
        /// </summary>
        internal static string StrictСomplianceWithTheStandart_MinPermanentLinkDiapason_Min {
            get {
                return ResourceManager.GetString("StrictСomplianceWithTheStandart.MinPermanentLinkDiapason.Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1,10.
        /// </summary>
        internal static string TechnologicalReserveAvailability_TechnologicalReserve_Default {
            get {
                return ResourceManager.GetString("TechnologicalReserveAvailability.TechnologicalReserve.Default", resourceCulture);
            }
        }
    }
}
